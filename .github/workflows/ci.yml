name: Build & Test
#build and test on the three OS

on:
  workflow_dispatch:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  # build-linux:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Build Ubuntu
  #     shell: bash -l {0}
  #     run: |
  #       sudo apt-get install libarmadillo-dev libboost-all-dev libmpfr-dev
  #       cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release
  #       cmake --build ${{github.workspace}}/build
  #       ctest --test-dir ${{github.workspace}}/build

  Linux:
    name: Linux
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: foo
          python-version: "3.12"
          environment-file: environment.yml
          channels: conda-forge,set3mah

      - name: Prepare conda environment
        shell: bash -l {0}
        run: |
          conda config --env --add channels conda-forge
          conda config --env --add channels set3mah          
          conda config --env --set channel_priority strict

      - name: Build for Linux (with Python bindings)
        shell: bash -l {0}
        run: |
          cmake -S . -B ${{github.workspace}}/build -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_PYTHON_BINDINGS=ON -DCMAKE_INCLUDE_PATH=$CONDA_PREFIX/include -DCMAKE_LIBRARY_PATH=$CONDA_PREFIX/lib -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -Wno-dev
          cmake --build ${{github.workspace}}/build
          cmake --install build --config Release

      - name: Tests
        shell: bash -l {0}
        run: ctest --test-dir ${{github.workspace}}/build

      - name: Python tests
        shell: bash -l {0}
        run: ctest --test-dir ${{github.workspace}}/build/simcoon-python-builder

      - name: Upload test logs as artifact
        if: always() # Ensure this step runs even if the tests fail
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-Linux
          path: build/Testing/Temporary/LastTest.log

      - name: Upload Python test logs as artifact
        if: always() # Ensure this step runs even if the tests fail
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-Python-Linux
          path: build/simcoon-python-builder/Testing/Temporary/LastTest.log

  MacOS:
    name: MacOS
    runs-on: "macos-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: foo
          environment-file: environment_arm64.yml
          channels: conda-forge,set3mah

      - name: Prepare conda environment
        shell: bash -l {0}
        run: |
          conda config --env --add channels conda-forge
          conda config --env --add channels set3mah          
          conda config --env --set channel_priority strict

      - name: Build for MacOS (with Python bindings)
        shell: bash -l {0}
        run: |
          cmake -S . -B ${{github.workspace}}/build -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_PYTHON_BINDINGS=ON -DCMAKE_INCLUDE_PATH=$CONDA_PREFIX/include -DCMAKE_LIBRARY_PATH=$CONDA_PREFIX/lib -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -Wno-dev
          cmake --build ${{github.workspace}}/build
          cmake --install build --config Release

      - name: Tests
        shell: bash -l {0}
        run: ctest --test-dir ${{github.workspace}}/build

      - name: Python tests
        shell: bash -l {0}
        run: ctest --test-dir ${{github.workspace}}/build/simcoon-python-builder

      - name: Upload test logs as artifact
        if: always() # Ensure this step runs even if the tests fail
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-OSX
          path: build/Testing/Temporary/LastTest.log

      - name: Upload Python test logs as artifact
        if: always() # Ensure this step runs even if the tests fail
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-Python-OSX
          path: build/simcoon-python-builder/Testing/Temporary/LastTest.log

  WindowsSimcoonOnly:
    name: WindowsSimcoonOnly
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: foo
          environment-file: environment_win.yml

      - name: Build for Windows (C++ only)
        shell: pwsh
        run: |
          cmake -S . -B build `
              -DCMAKE_BUILD_TYPE=Release `
              -DCMAKE_INSTALL_PREFIX="$env:CONDA_PREFIX/Library" `
              -DBUILD_PYTHON_BINDINGS=OFF `
              -Wno-dev
          cmake --build build --config Release
          cmake --install build

      - name: Tests
        shell: pwsh
        run: ctest --test-dir build -C Release --output-on-failure -VV

  Windows:
    name: Windows
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: foo
          environment-file: environment_win.yml

      - name: Build for Windows (with Python bindings)
        shell: pwsh
        run: |
          cmake -S . -B build `
              -DCMAKE_BUILD_TYPE=Release `
              -DCMAKE_INSTALL_PREFIX="$env:CONDA_PREFIX/Library" `
              -DBUILD_PYTHON_BINDINGS=ON `
              -Wno-dev
          cmake --build build --config Release
          cmake --install build

      - name: Python tests
        shell: pwsh
        run: ctest --test-dir build/simcoon-python-builder -C Release --output-on-failure -VV

      - name: Upload test logs as artifact
        if: always() # Ensure this step runs even if the tests fail
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-Win
          path: build/Testing/Temporary/LastTest.log

      - name: Upload Python test logs as artifact
        if: always() # Ensure this step runs even if the tests fail
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-Python-Win
          path: build/simcoon-python-builder/Testing/Temporary/LastTest.log
