name: Build python package

on:
  workflow_dispatch:
    inputs:
      publish_to_testpypi:
        description: "Publish to TestPyPI"
        required: false
        default: false
        type: boolean
      publish_to_pypi:
        description: "Publish to PyPI"
        required: false
        default: false
        type: boolean
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            sys-package-cache-path: /var/cache/apt/archives
            sys-package-install-command: >
              sudo apt-get update &&
              sudo apt-get install -y libarmadillo-dev libboost-all-dev
          - os: macos-latest
            sys-package-cache-path: ~/Library/Caches/Homebrew
            sys-package-install-command: brew install armadillo boost googletest
          - os: windows-latest
            sys-package-cache-path: C:\vcpkg\installed
            sys-package-install-command: |
              vcpkg install armadillo:x64-windows boost-config:x64-windows boost-dll:x64-windows
            setup-env-command: |
              echo "VCPKG_ROOT=C:\vcpkg" >> $env:GITHUB_ENV
              echo "CMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake" >> $env:GITHUB_ENV

    runs-on: ${{ matrix.os }}
    name: Test on ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v6

      - run: uv python install

      - name: Cache system packages
        uses: actions/cache@v4
        with:
          path: ${{ matrix.sys-package-cache-path }}
          key: ${{ runner.os }}-sys-packages-${{ hashFiles('.github/workflows/build.yml') }}
          restore-keys: |
            ${{ runner.os }}-sys-packages-

      - name: Install system dependencies
        run: ${{ matrix.sys-package-install-command }}

      - name: Setup environment (Windows only)
        if: runner.os == 'Windows'
        run: ${{ matrix.setup-env-command }}

      - name: Install Python dependencies
        run: uv sync --locked --all-extras --dev --verbose

      - name: Run tests
        run: uv run pytest

  build-wheels:
    needs: build-and-test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    name: Build wheels on ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
      - uses: pypa/cibuildwheel@v3.0

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  build-sdist:
    needs: build-and-test
    runs-on: ubuntu-latest
    name: Build source distribution

    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6

      - name: Build source distribution
        run: uv build --sdist

      - name: Upload sdist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish-to-testpypi:
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    name: Publish to TestPyPI
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository

    environment:
      name: testpypi
      url: https://test.pypi.org/p/${{ github.event.repository.name }}

    permissions:
      id-token: write # For trusted publishing

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    name: Publish to PyPI
    # Only publish to PyPI on manual trigger with pypi option
    if: github.event_name == 'workflow_dispatch' && inputs.publish_to_pypi

    environment:
      name: pypi
      url: https://pypi.org/p/${{ github.event.repository.name }}

    permissions:
      id-token: write # For trusted publishing

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
