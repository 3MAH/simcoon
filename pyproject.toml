[build-system]
requires = ["scikit-build-core>=0.11.5", "pybind11>=3.0.0", "numpy>=2.0.2"]
build-backend = "scikit_build_core.build"

[project]
name = "simcoon"
version = "1.9.7"
description = "Simulation in Mechanics and Materials: Interactive Tools"
authors = [{ name = "Yves Chemisky", email = "yves.chemisky@gmail.com" }]
license = { text = "GPL" }
readme = "README.md"
requires-python = ">=3.9"
dependencies = ["numpy>=2.0.2"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License (GPL)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
]

[project.urls]
"Homepage" = "https://github.com/3MAH/simcoon"
"Bug Tracker" = "https://github.com/3MAH/simcoon/issues"
"Documentation" = "https://simcoon.readthedocs.io"
"Source Code" = "https://github.com/3MAH/simcoon"

[tool.scikit-build]
# Source directory for Python packages
wheel.packages = ["python-setup"]
# CMake options
cmake.args = ["-DBUILD_PYTHON_BINDINGS=ON", "-DBUILD_TESTS=OFF"]
cmake.build-type = "Release"
# Install directory mapping
install.components = ["python"]
build-dir = "build"

[dependency-groups]
dev = ["pytest>=8.3.5"]

[tool.cibuildwheel]
# build-frontend = "build[uv]"
# Build for Python 3.9-3.13 on all platforms
build = "cp39-* cp310-* cp311-* cp312-* cp313-*"

# Skip 32-bit builds and PyPy
skip = "pp* *-win32 *-manylinux_i686 *-musllinux_i686"

# Test the built wheels
test-command = 'python -c "import simcoon; import simcoon.simmit"'

# Build verbosity
build-verbosity = 1


[[tool.cibuildwheel.overrides]]
select = "*-macosx_x86_64"
environment = { MACOSX_DEPLOYMENT_TARGET = "13.0" }

[[tool.cibuildwheel.overrides]]
select = "*-macosx_arm64"
environment = { MACOSX_DEPLOYMENT_TARGET = "14.0" }

# Add this to pyproject.toml to debug what's actually installed:

[tool.cibuildwheel.linux]
archs = ["x86_64", "aarch64"]
before-all = [
    "yum update -y",
    "yum install -y epel-release",
    
    # Debug: What boost packages are available?
    "echo '=== Available Boost packages ==='",
    "yum search boost 2>/dev/null | grep '^boost' | head -10",
    
    # Install packages
    "yum install -y armadillo-devel boost-devel boost-filesystem boost-system boost-static cmake3 gcc-c++",
    
    # Debug: What got installed?
    "echo '=== Installed Boost packages ==='", 
    "rpm -qa | grep boost",
    
    # Debug: Where are the libraries?
    "echo '=== Boost library locations ==='",
    "find /usr -name '*boost_filesystem*' 2>/dev/null",
    "find /usr -name '*boost_system*' 2>/dev/null",
    
    # Debug: What CMake can find
    "echo '=== CMake Boost detection test ==='",
    "cd /tmp && echo 'find_package(Boost REQUIRED COMPONENTS filesystem system)' > test.cmake",
    "cd /tmp && echo 'message(STATUS \"Boost found: \${Boost_FOUND}\")' >> test.cmake", 
    "cd /tmp && echo 'message(STATUS \"Boost libraries: \${Boost_LIBRARIES}\")' >> test.cmake",
    "cd /tmp && cmake3 -P test.cmake || true",
]

[tool.cibuildwheel.macos]
archs = ["auto"]
before-all = ["brew install armadillo boost"]

[tool.cibuildwheel.windows]
archs = ["AMD64"]
before-all = "vcpkg install armadillo:x64-windows boost-config:x64-windows boost-dll:x64-windows boost-filesystem:x64-windows boost-system:x64-windows"
environment = { VCPKG_ROOT = "C:/vcpkg", CMAKE_TOOLCHAIN_FILE = "C:/vcpkg/scripts/buildsystems/vcpkg.cmake" }
